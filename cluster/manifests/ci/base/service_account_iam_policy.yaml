apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-workflows-sa
  namespace: argo
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::245339368379:role/workflow-pods-iam-role01
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argo-workflow-sa-role
  namespace: argo
rules:
# pod get/watch is used to identify the container IDs of the current pod
# pod patch is used to annotate the step's outputs back to controller (e.g. artifact location)
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  - pods/exec
  verbs:
  - get
  - watch
  - patch
  - create
  - list
  - update
  - delete
- apiGroups:
  - argoproj.io
  resources:
  - workflowtemplates
  - workflowtasksets
  - workflowtasksets/status
  verbs:
  - get
  - list
  - watch
  - update
  - patch
  - delete
  - create
- apiGroups:
  - argoproj.io
  resources:
  - workflowtaskresult
  verbs:
  - create
  - patch
  - list
  - watch
  - update
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  verbs:
  - get
  - watch
  - create
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argo-workflow-sa
  namespace: argo
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argo-workflow-sa-role
subjects:
- kind: ServiceAccount
  name: argo-workflows-sa
  namespace: argo
- kind: ServiceAccount
  name: default
  namespace: argo
---
apiVersion: v1
data:
  config.json: |
    { "credsStore": "ecr-login" }
kind: ConfigMap
metadata:
  name: docker-config
  namespace: argo

